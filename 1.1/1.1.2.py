a, a, b = input().split()
print(a)

"""
正常人在这个阶段可能会写：a, b, c= input().split()，然后print(b)
但是既然可以覆写，为什么不省一个定义变量的空间呢？优化就是从这些小地方做起的。
虽然这个优化程度可以忽略不计，但我觉得你在写程序的时候应该时刻把“优化”这件事放在心上，这样你才能在真正需要的时候，随时想到怎么优化。
所以我会经常写一些花里胡哨的写法。他们可能得不偿失，但是希望能够拓宽大家的思维，起到抛砖引玉的作用。
有的人可能有精神洁癖，觉得你没有按照题目要求来啊，题目要求输入三个整数，你怎么能覆盖一个呢。
但是程序本身是黑箱，你只需要在乎我“输入”了什么和程序“输出”了什么。只要它能针对符合要求的输入，给出正确的输出，无论原理如何，他就是好用的。
执行速度，占用空间，文件长度，适用范围，易读性等等都可以用来衡量程序好不好，唯独“必须三个数都读入”这种洁癖不可以。
这种洁癖将会对你的思维造成很多阻碍的。
哦，对了，如果你print(type(a))，你会发现a的类型是str(字符串)。但是题目要求输出的是一个整数，不是一个字符串！
如果你意识到了这个问题，那你可以开始细品了。如果你听的云里雾里，我的建议是不要品。
"""

"""
你可能还想更进一步，省掉一个变量就是极限了吗，显然不是，你还可以试着这样写：
print(input().split()[1])
一行就能解决问题。而且彻底省掉了所有自己定义的变量。每节约一个变量就是节约一点空间。
有朋友可能会问：我要输出的是第2个，为什么用[1]？
哦，那是因为学习python(和其他很多语言一样)从零开始。
"""

"""
我觉得有必要强调一下，我非常建议大家细品这几种实现方法，理解为什么他们都能够做出题目来。
虽然这些做法其实彼此完全等价，严格来说没有分别掌握的必要。但是我觉得这能够鼓励读者去理解每一个部件分别的含义，而不是简单的当作固定搭配。
"""